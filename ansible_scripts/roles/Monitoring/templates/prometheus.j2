# Sample config for Prometheus.

global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'example'

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s
    scrape_timeout: 5s

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

  - job_name: cadvisor
    scrape_interval: 5s
    scrape_timeout: 5s
    static_configs:
      - targets: ['{{ runner_ip }}:8088', '{{ production_ip }}:8088']
    metric_relabel_configs:
      - regex: '^container_label_com_gitlab_gitlab_runner_.*$'
        action: labeldrop
      - regex: "id"
        action: labeldrop
      - source_labels: ["name"]
        action: replace
        regex:  "^runner.*$"
        target_label: "name"
        replacement: "runner"
      - regex: "image"
        action: labeldrop
      #- source_labels: ["container_label_com_docker_compose_service"]
      #  action: replace
      #  regex: "redmine"
      #  target_label: "id"
      #  replacement: $1

